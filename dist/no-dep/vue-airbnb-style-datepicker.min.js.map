{"version":3,"file":"vue-airbnb-style-datepicker.min.js","sources":["../../src/polyfills.js","../../src/components/languages.js","../../src/helpers.js","../../src/components/AirbnbStyleDatepicker.vue","../../src/directives/ClickOutside.js","../../src/index.js"],"sourcesContent":["/* eslint-disable */\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n    function(s) {\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s)\n      var i = matches.length\n      while (--i >= 0 && matches.item(i) !== this) {}\n      return i > -1\n    }\n}\n\nif (typeof Object.assign !== 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      'use strict'\n      if (target == null) {\n        // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n\n      var to = Object(target)\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\nif (!Array.prototype.findIndex) {\n  Object.defineProperty(Array.prototype, 'findIndex', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined')\n      }\n\n      var o = Object(this)\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function')\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1]\n\n      // 5. Let k be 0.\n      var k = 0\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return k.\n        var kValue = o[k]\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return k\n        }\n        // e. Increase k by 1.\n        k++\n      }\n\n      // 7. Return -1.\n      return -1\n    }\n  })\n}\n","export default {\n  ru: {\n    daysShort: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n    monthNames: [\n      'Январь',\n      'Февраль',\n      'Март',\n      'Апрель',\n      'Май',\n      'Июнь',\n      'Июль',\n      'Август',\n      'Сентябрь',\n      'Октябрь',\n      'Ноябрь',\n      'Декабрь'\n    ],\n    texts: {\n      apply: 'Применить',\n      cancel: 'Отменить'\n    }\n  },\n  kk: {\n    daysShort: ['Дүй', 'Сей', 'Сәр', 'Бей', 'Жұм', 'Сен', 'Жек'],\n    monthNames: [\n      'Қаңтар',\n      'Ақпан',\n      'Наурыз',\n      'Сәуір',\n      'Мамыр',\n      'Маусым',\n      'Шілде',\n      'Тамыз',\n      'Қыркүйек',\n      'Қазан',\n      'Қараша',\n      'Желтоқсан'\n    ],\n    texts: {\n      apply: 'Қолдану',\n      cancel: 'Жою'\n    }\n  },\n  en: {\n    daysShort: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    monthNames: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    texts: {\n      apply: 'Apply',\n      cancel: 'Cancel'\n    }\n  }\n}\n","/* eslint-disable */\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nexport const debounce = (func, wait, immediate) => {\n  var timeout\n  return function() {\n    var context = this,\n      args = arguments\n    var later = function() {\n      timeout = null\n      if (!immediate) func.apply(context, args)\n    }\n    var callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) func.apply(context, args)\n  }\n}\n\nexport const copyObject = obj => {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport const findAncestor = (element, selector) => {\n  if (!element) {\n    return null\n  }\n  if (typeof element.closest === 'function') {\n    return element.closest(selector) || null\n  }\n  while (element) {\n    if (element.matches(selector)) {\n      return element\n    }\n    element = element.parentElement\n  }\n  return null\n}\n\nexport const randomString = length => {\n  let text = ''\n  let possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return text\n}\n","<template>\n  <transition name=\"fade\">\n    <div\n      :id=\"wrapperId\"\n      class=\"airbnb-style-datepicker-wrapper\"\n      v-show=\"showDatepicker\"\n      :class=\"wrapperClasses\"\n      :style=\"showFullscreen ? undefined : wrapperStyles\"\n      v-click-outside=\"handleClickOutside\"\n    >\n\n      <div class=\"datepicker-header\">\n        <div class=\"change-month-button previous\">\n          <button @click=\"previousMonth\">\n            <svg viewBox=\"0 0 1000 1000\"><path d=\"M336.2 274.5l-210.1 210h805.4c13 0 23 10 23 23s-10 23-23 23H126.1l210.1 210.1c11 11 11 21 0 32-5 5-10 7-16 7s-11-2-16-7l-249.1-249c-11-11-11-21 0-32l249.1-249.1c21-21.1 53 10.9 32 32z\" /></svg>\n          </button>\n        </div>\n        <div class=\"change-month-button next\">\n          <button @click=\"nextMonth\">\n            <svg viewBox=\"0 0 1000 1000\"><path d=\"M694.4 242.4l249.1 249.1c11 11 11 21 0 32L694.4 772.7c-5 5-10 7-16 7s-11-2-16-7c-11-11-11-21 0-32l210.1-210.1H67.1c-13 0-23-10-23-23s10-23 23-23h805.4L662.4 274.5c-21-21.1 11-53.1 32-32.1z\" /></svg>\n          </button>\n        </div>\n\n        <div\n          class=\"days-legend\"\n          v-for=\"(month, index) in showMonths\"\n          :key=\"month\"\n          :style=\"[monthWidthStyles, {left: (width * index) + 'px'}]\"\n        >\n          <div class=\"day-title\" v-for=\"day in daysShort\" :key=\"day\">{{ day }}</div>\n        </div>\n      </div>\n\n      <div class=\"datepicker-inner-wrapper\" :style=\"innerStyles\">\n        <transition-group name=\"list-complete\" tag=\"div\">\n          <div\n            v-for=\"(month, monthIndex) in months\"\n            :key=\"month.firstDateOfMonth\"\n            class=\"month\"\n            :class=\"{hidden: monthIndex === 0 || monthIndex > showMonths}\"\n            :style=\"monthWidthStyles\"\n          >\n            <div class=\"month-name\">{{ monthNames[month.monthIndex] }} {{ month.year }}</div>\n\n            <table class=\"month-table\" role=\"presentation\">\n              <tbody>\n                <tr class=\"week\" v-for=\"(week, index) in month.weeks\" :key=\"index\">\n                  <td\n                    class=\"day\"\n                    v-for=\"({fullDate, dayNumber}, index) in week\"\n                    :key=\"index + '_' + dayNumber\"\n                    :data-date=\"fullDate\"\n                    :class=\"{\n                      enabled: dayNumber !== 0,\n                      empty: dayNumber === 0,\n                      disabled: isDisabled(fullDate),\n                      selected: selectedDate1 === fullDate || selectedDate2 === fullDate,\n                      'in-range': isInRange(fullDate)\n                    }\"\n                    :style=\"{\n                      width: (width - 30) / 7 + 'px',\n                      background: isSelected(fullDate) ? colors.selected : isInRange(fullDate) ? colors.inRange : '',\n                      color: isSelected(fullDate) ? colors.selectedText : isInRange(fullDate) ? colors.selectedText : colors.text\n                    }\"\n                    @mouseover=\"() => { setHoverDate(fullDate) }\"\n                  >\n                    <button\n                      class=\"day-button\"\n                      v-if=\"dayNumber\"\n                      :date=\"fullDate\"\n                      :disabled=\"isDisabled(fullDate)\"\n                      @click=\"() => { selectDate(fullDate) }\"\n                    >{{ dayNumber }}</button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </transition-group>\n      </div>\n      <div class=\"action-buttons mobile-only\" v-if=\"mode !== 'single' && showActionButtons\">\n        <button @click=\"closeDatepickerCancel\">{{ texts.cancel }}</button>\n        <button @click=\"closeDatepicker\" :style=\"{color: colors.selected}\">{{ texts.apply }}</button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport format from 'date-fns/format'\nimport subMonths from 'date-fns/sub_months'\nimport addMonths from 'date-fns/add_months'\nimport getDaysInMonth from 'date-fns/get_days_in_month'\nimport isBefore from 'date-fns/is_before'\nimport isAfter from 'date-fns/is_after'\nimport isValid from 'date-fns/is_valid'\nimport Languages from './languages.js'\nimport { debounce, copyObject, findAncestor, randomString } from './../helpers'\n\nexport default {\n  name: 'AirbnbStyleDatepicker',\n  props: {\n    triggerElementId: { type: String },\n    dateOne: { type: [String, Date], default: format(new Date()) },\n    dateTwo: { type: [String, Date] },\n    minDate: { type: [String, Date] },\n    endDate: { type: [String, Date] },\n    mode: { type: String, default: 'range' },\n    offsetY: { type: Number, default: 0 },\n    offsetX: { type: Number, default: 0 },\n    monthsToShow: { type: Number, default: 1 },\n    startOpen: { type: Boolean },\n    fullscreenMobile: { type: Boolean, default: true },\n    inline: { type: Boolean },\n    disabledDates: { type: Array, default: () => [] },\n    showActionButtons: { type: Boolean, default: true },\n    disabled: { type: Boolean, default: false },\n    isTest: {\n      type: Boolean,\n      default: () => process.env.NODE_ENV === 'test'\n    },\n    lang: { type: String, default: 'ru' }\n  },\n  data() {\n    return {\n      wrapperId: 'airbnb-style-datepicker-wrapper-' + randomString(5),\n      dateFormat: 'YYYY-MM-DD',\n      showDatepicker: false,\n      showMonths: 2,\n      colors: {\n        selected: '#643184',\n        inRange: '#b98ad1',\n        selectedText: '#fff',\n        text: '#73879c'\n      },\n      sundayFirst: false,\n      startingDate: '',\n      months: [],\n      width: 300,\n      selectedDate1: '',\n      selectedDate2: '',\n      isSelectingDate1: true,\n      hoverDate: '',\n      alignRight: false,\n      triggerPosition: {},\n      triggerWrapperPosition: {},\n      viewportWidth: window.innerWidth + 'px',\n      isMobile: window.innerWidth < 768,\n      isTablet: window.innerWidth >= 768 && window.innerWidth <= 1024,\n      triggerElement: undefined\n    }\n  },\n  computed: {\n    translation() {\n      return Languages[this.lang]\n    },\n    daysShort() {\n      return this.translation.daysShort\n    },\n    monthNames() {\n      return this.translation.monthNames\n    },\n    texts() {\n      return this.translation.texts\n    },\n    wrapperClasses() {\n      return {\n        'datepicker-open': this.showDatepicker,\n        'full-screen': this.showFullscreen,\n        inline: this.inline\n      }\n    },\n    wrapperStyles() {\n      return {\n        position: this.inline ? 'static' : 'absolute',\n        top: this.inline\n          ? '0'\n          : this.triggerPosition.height + this.offsetY + 'px',\n        left: !this.alignRight\n          ? this.triggerPosition.left -\n            this.triggerWrapperPosition.left +\n            this.offsetX +\n            'px'\n          : '',\n        right: this.alignRight\n          ? this.triggerWrapperPosition.right -\n            this.triggerPosition.right +\n            this.offsetX +\n            'px'\n          : '',\n        width: this.width * this.showMonths + 'px',\n        zIndex: this.inline ? '0' : '100'\n      }\n    },\n    innerStyles() {\n      return {\n        'margin-left': this.showFullscreen\n          ? '-' + this.viewportWidth\n          : `-${this.width}px`\n      }\n    },\n    monthWidthStyles() {\n      return {\n        width: this.showFullscreen ? this.viewportWidth : this.width + 'px'\n      }\n    },\n    showFullscreen() {\n      return this.isMobile && this.fullscreenMobile\n    },\n    datesSelected() {\n      return !!(\n        (this.selectedDate1 && this.selectedDate1 !== '') ||\n        (this.selectedDate2 && this.selectedDate2 !== '')\n      )\n    },\n    allDatesSelected() {\n      return !!(\n        this.selectedDate1 &&\n        this.selectedDate1 !== '' &&\n        this.selectedDate2 &&\n        this.selectedDate2 !== ''\n      )\n    },\n    hasMinDate() {\n      return !!(this.minDate && this.minDate !== '')\n    },\n    isRangeMode() {\n      return this.mode === 'range'\n    },\n    isSingleMode() {\n      return this.mode === 'single'\n    },\n    datepickerWidth() {\n      return this.width * this.showMonths\n    },\n    datePropsCompound() {\n      // used to watch for changes in props, and update GUI accordingly\n      return this.dateOne + this.dateTwo\n    },\n    isDateTwoBeforeDateOne() {\n      if (!this.dateTwo) {\n        return false\n      }\n      return isBefore(this.dateTwo, this.dateOne)\n    }\n  },\n  watch: {\n    selectedDate1(newValue, oldValue) {\n      let newDate =\n        !newValue || newValue === '' ? '' : format(newValue, this.dateFormat)\n      this.$emit('date-one-selected', newDate)\n    },\n    selectedDate2(newValue, oldValue) {\n      let newDate =\n        !newValue || newValue === '' ? '' : format(newValue, this.dateFormat)\n      this.$emit('date-two-selected', newDate)\n    },\n    mode(newValue, oldValue) {\n      this.setStartDates()\n    },\n    datePropsCompound(newValue) {\n      if (this.dateOne !== this.selectedDate1) {\n        this.startingDate = this.dateOne\n        this.setStartDates()\n        this.generateMonths()\n      }\n      if (this.isDateTwoBeforeDateOne) {\n        this.selectedDate2 = ''\n        this.$emit('date-two-selected', '')\n      }\n    }\n  },\n  created() {\n    this.setupDatepicker()\n\n    if (this.sundayFirst) {\n      this.setSundayToFirstDayInWeek()\n    }\n\n    this._handleWindowResizeEvent = debounce(() => {\n      this.positionDatepicker()\n      this.setStartDates()\n    }, 200)\n    this._handleWindowClickEvent = event => {\n      if (event.target.id === this.triggerElementId) {\n        event.stopPropagation()\n        event.preventDefault()\n        this.toggleDatepicker()\n      }\n    }\n    window.addEventListener('resize', this._handleWindowResizeEvent)\n    window.addEventListener('click', this._handleWindowClickEvent)\n  },\n  mounted() {\n    this.triggerElement = this.isTest\n      ? document.createElement('input')\n      : document.getElementById(this.triggerElementId)\n\n    this.setStartDates()\n    this.generateMonths()\n\n    if (this.startOpen || this.inline) {\n      this.openDatepicker()\n    }\n\n    this.triggerElement.addEventListener('keyup', this.handleTriggerInput)\n  },\n  destroyed() {\n    window.removeEventListener('resize', this._handleWindowResizeEvent)\n    window.removeEventListener('click', this._handleWindowClickEvent)\n\n    this.triggerElement.removeEventListener('keyup', this.handleTriggerInput)\n  },\n  methods: {\n    handleClickOutside(event) {\n      if (event.target.id === this.triggerElementId) {\n        return\n      }\n      this.closeDatepicker()\n    },\n    handleTriggerInput(event) {\n      const keys = {\n        arrowDown: 40,\n        arrowUp: 38,\n        arrowRight: 39,\n        arrowLeft: 37\n      }\n      if (\n        event.keyCode === keys.arrowDown &&\n        !event.shiftKey &&\n        !this.showDatepicker\n      ) {\n        this.openDatepicker()\n      } else if (\n        event.keyCode === keys.arrowUp &&\n        !event.shiftKey &&\n        this.showDatepicker\n      ) {\n        this.closeDatepicker()\n      } else if (\n        event.keyCode === keys.arrowRight &&\n        !event.shiftKey &&\n        this.showDatepicker\n      ) {\n        this.nextMonth()\n      } else if (\n        event.keyCode === keys.arrowLeft &&\n        !event.shiftKey &&\n        this.showDatepicker\n      ) {\n        this.previousMonth()\n      } else {\n        if (this.mode === 'single') {\n          this.setDateFromText(event.target.value)\n        }\n      }\n    },\n    setDateFromText(value) {\n      if (value.length < 10) {\n        return\n      }\n      // make sure format is either 'YYYY-MM-DD' or 'DD.MM.YYYY'\n      const isFormatYearFirst = value.match(\n        /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/\n      )\n      const isFormatDayFirst = value.match(\n        /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])[.](0[1-9]|1[0-2])[.](\\d{4})$/\n      )\n\n      if (!isFormatYearFirst && !isFormatDayFirst) {\n        return\n      }\n      if (isFormatDayFirst) {\n        //convert to YYYY-MM-DD\n        value = `${value.substring(6, 10)}-${value.substring(\n          3,\n          5\n        )}-${value.substring(0, 2)}`\n      }\n\n      const valueAsDateObject = new Date(value)\n      if (!isValid(valueAsDateObject)) {\n        return\n      }\n      const formattedDate = format(valueAsDateObject, this.dateFormat)\n      if (\n        this.isDateDisabled(formattedDate) ||\n        this.isBeforeMinDate(formattedDate) ||\n        this.isAfterEndDate(formattedDate)\n      ) {\n        return\n      }\n      this.startingDate = subMonths(formattedDate, 1)\n      this.generateMonths()\n      this.selectDate(formattedDate)\n    },\n    generateMonths() {\n      this.months = []\n      for (let i = 0; i < this.showMonths + 2; i++) {\n        this.months.push(this.getMonth(this.startingDate))\n        this.startingDate = this.addMonths(this.startingDate)\n      }\n    },\n    setupDatepicker() {\n      if (this.$options.sundayFirst) {\n        this.sundayFirst = copyObject(this.$options.sundayFirst)\n      }\n      if (this.$options.colors) {\n        const colors = copyObject(this.$options.colors)\n        this.colors.selected = colors.selected || this.colors.selected\n        this.colors.inRange = colors.inRange || this.colors.inRange\n        this.colors.selectedText =\n          colors.selectedText || this.colors.selectedText\n        this.colors.text = colors.text || this.colors.text\n      }\n    },\n    setStartDates() {\n      let startDate = this.dateOne || new Date()\n      if (this.hasMinDate && isBefore(startDate, this.minDate)) {\n        startDate = this.minDate\n      }\n      this.startingDate = this.subtractMonths(startDate)\n      this.selectedDate1 = this.dateOne\n      this.selectedDate2 = this.dateTwo\n    },\n    setSundayToFirstDayInWeek() {\n      const lastDayShort = this.daysShort.pop()\n      this.daysShort.unshift(lastDayShort)\n    },\n    getMonth(date) {\n      const firstDateOfMonth = format(date, 'YYYY-MM-01')\n      const year = format(date, 'YYYY')\n      const monthNumber = parseInt(format(date, 'M'))\n      const monthIndex = monthNumber - 1\n\n      return {\n        year,\n        firstDateOfMonth,\n        monthIndex,\n        monthNumber,\n        weeks: this.getWeeks(firstDateOfMonth)\n      }\n    },\n    getWeeks(date) {\n      const weekDayNotInMonth = { dayNumber: 0 }\n      const daysInMonth = getDaysInMonth(date)\n      const year = format(date, 'YYYY')\n      const month = format(date, 'MM')\n      let firstDayInWeek = parseInt(format(date, this.sundayFirst ? 'd' : 'E'))\n      if (this.sundayFirst) {\n        firstDayInWeek++\n      }\n      let weeks = []\n      let week = []\n\n      // add empty days to get first day in correct position\n      for (let s = 1; s < firstDayInWeek; s++) {\n        week.push(weekDayNotInMonth)\n      }\n      for (let d = 0; d < daysInMonth; d++) {\n        let isLastDayInMonth = d >= daysInMonth - 1\n        let dayNumber = d + 1\n        let dayNumberFull = dayNumber < 10 ? '0' + dayNumber : dayNumber\n        week.push({\n          dayNumber,\n          dayNumberFull: dayNumberFull,\n          fullDate: year + '-' + month + '-' + dayNumberFull\n        })\n\n        if (week.length === 7) {\n          weeks.push(week)\n          week = []\n        } else if (isLastDayInMonth) {\n          for (let i = 0; i < 7 - week.length; i++) {\n            week.push(weekDayNotInMonth)\n          }\n          weeks.push(week)\n          week = []\n        }\n      }\n      return weeks\n    },\n    selectDate(date) {\n      if (\n        this.isBeforeMinDate(date) ||\n        this.isAfterEndDate(date) ||\n        this.isDateDisabled(date)\n      ) {\n        return\n      }\n\n      if (this.mode === 'single') {\n        this.selectedDate1 = date\n        this.closeDatepicker()\n        return\n      }\n\n      if (this.isSelectingDate1 || isBefore(date, this.selectedDate1)) {\n        this.selectedDate1 = date\n        this.isSelectingDate1 = false\n\n        if (isBefore(this.selectedDate2, date)) {\n          this.selectedDate2 = ''\n        }\n      } else {\n        this.selectedDate2 = date\n        this.isSelectingDate1 = true\n\n        if (isAfter(this.selectedDate1, date)) {\n          this.selectedDate1 = ''\n        }\n      }\n    },\n    setHoverDate(date) {\n      this.hoverDate = date\n    },\n    isSelected(date) {\n      if (!date) {\n        return\n      }\n      return this.selectedDate1 === date || this.selectedDate2 === date\n    },\n    isInRange(date) {\n      if (!this.allDatesSelected || this.isSingleMode) {\n        return false\n      }\n\n      return (\n        (isAfter(date, this.selectedDate1) &&\n          isBefore(date, this.selectedDate2)) ||\n        (isAfter(date, this.selectedDate1) &&\n          isBefore(date, this.hoverDate) &&\n          !this.allDatesSelected)\n      )\n    },\n    isBeforeMinDate(date) {\n      if (!this.minDate) {\n        return false\n      }\n      return isBefore(date, this.minDate)\n    },\n    isAfterEndDate(date) {\n      if (!this.endDate) {\n        return false\n      }\n      return isAfter(date, this.endDate)\n    },\n    isDateDisabled(date) {\n      const isDisabled = this.disabledDates.indexOf(date) > -1\n      return isDisabled\n    },\n    isDisabled(date) {\n      return (\n        this.isDateDisabled(date) ||\n        this.isBeforeMinDate(date) ||\n        this.isAfterEndDate(date)\n      )\n    },\n    previousMonth() {\n      this.startingDate = this.subtractMonths(this.months[0].firstDateOfMonth)\n\n      this.months.unshift(this.getMonth(this.startingDate))\n      this.months.splice(this.months.length - 1, 1)\n    },\n    nextMonth() {\n      this.startingDate = this.addMonths(\n        this.months[this.months.length - 1].firstDateOfMonth\n      )\n      this.months.push(this.getMonth(this.startingDate))\n\n      setTimeout(() => {\n        this.months.splice(0, 1)\n      }, 100)\n    },\n    subtractMonths(date) {\n      return format(subMonths(date, 1), this.dateFormat)\n    },\n    addMonths(date) {\n      return format(addMonths(date, 1), this.dateFormat)\n    },\n    toggleDatepicker() {\n      if (this.showDatepicker) {\n        this.closeDatepicker()\n      } else if (!this.disabled) {\n        this.openDatepicker()\n      }\n    },\n    openDatepicker() {\n      this.positionDatepicker()\n      this.setStartDates()\n      this.triggerElement.classList.add('datepicker-open')\n      this.showDatepicker = true\n      this.initialDate1 = this.dateOne\n      this.initialDate2 = this.dateTwo\n    },\n    closeDatepickerCancel() {\n      if (this.showDatepicker) {\n        this.selectedDate1 = this.initialDate1\n        this.selectedDate2 = this.initialDate2\n        this.closeDatepicker()\n      }\n    },\n    closeDatepicker() {\n      if (this.inline) {\n        return\n      }\n      this.showDatepicker = false\n      this.triggerElement.classList.remove('datepicker-open')\n      this.$emit('closed')\n    },\n    positionDatepicker() {\n      const triggerWrapperElement = findAncestor(\n        this.triggerElement,\n        '.datepicker-trigger'\n      )\n      this.triggerPosition = this.triggerElement.getBoundingClientRect()\n      if (triggerWrapperElement) {\n        this.triggerWrapperPosition = triggerWrapperElement.getBoundingClientRect()\n      } else {\n        this.triggerWrapperPosition = { left: 0, right: 0 }\n      }\n\n      const viewPortWidth = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      )\n      this.viewportWidth = viewPortWidth + 'px'\n      this.isMobile = viewPortWidth < 768\n      this.isTablet = viewPortWidth >= 768 && viewPortWidth <= 1024\n      this.showMonths = this.isMobile\n        ? 1\n        : this.isTablet && this.monthsToShow > 2 ? 2 : this.monthsToShow\n\n      this.$nextTick(function() {\n        const datepickerWrapper = document.getElementById(this.wrapperId)\n        if (!this.triggerElement || !datepickerWrapper) {\n          return\n        }\n\n        const rightPosition =\n          this.triggerElement.getBoundingClientRect().left +\n          datepickerWrapper.getBoundingClientRect().width\n        this.alignRight = rightPosition > viewPortWidth\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import './../styles/transitions';\n\n$tablet: 768px;\n$color-gray: rgba(0, 0, 0, 0.2);\n$transition-time: 0.3s;\n$border-normal: 1px solid $color-gray;\n\n*,\n*:after,\n*:before {\n  box-sizing: border-box;\n}\n\n.datepicker-trigger {\n  position: relative;\n  overflow: visible;\n}\n\n.airbnb-style-datepicker-wrapper {\n  border: $border-normal;\n  white-space: nowrap;\n  text-align: center;\n  overflow: hidden;\n  background-color: white;\n  border: 1px solid #d9d9d9;\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n\n  &.full-screen {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border: none;\n    z-index: 100;\n  }\n  .datepicker-inner-wrapper {\n    transition: all $transition-time ease;\n    position: relative;\n  }\n  .datepicker-header {\n    position: relative;\n  }\n  .change-month-button {\n    position: absolute;\n    top: 12px;\n    z-index: 10;\n    background: white;\n\n    &.previous {\n      left: 0;\n      padding-left: 15px;\n    }\n    &.next {\n      right: 0;\n      padding-right: 15px;\n    }\n\n    button {\n      background-color: white;\n      border: none;\n      padding: 4px 8px;\n      cursor: pointer;\n    }\n\n    svg {\n      height: 19px;\n      width: 19px;\n      fill: #82888a;\n    }\n  }\n  .days-legend {\n    position: absolute;\n    top: 50px;\n    left: 10px;\n    padding: 0 10px;\n  }\n  .day-title {\n    display: inline-block;\n    width: percentage(1/7);\n    text-align: center;\n    margin-bottom: 4px;\n    color: rgba(0, 0, 0, 0.7);\n    font-size: 0.8em;\n    margin-left: -1px;\n    font-weight: bold;\n  }\n\n  .month-table {\n    border-collapse: collapse;\n    border-spacing: 0;\n    background: white;\n    width: 100%;\n    max-width: 100%;\n  }\n\n  .month {\n    transition: all $transition-time ease;\n    display: inline-block;\n    padding: 15px;\n\n    &.hidden {\n      height: auto;\n      visibility: hidden;\n    }\n  }\n  .month-name {\n    font-size: 1.3em;\n    text-align: center;\n    margin: 0 0 30px;\n    line-height: 1.4em;\n    font-weight: normal;\n  }\n\n  .day {\n    $size: 26px;\n    line-height: normal;\n    height: $size;\n    padding: 0;\n    overflow: hidden;\n\n    &:not(.disabled):hover {\n      background-color: #e4e7e7;\n    }\n\n    &.selected,\n    &.in-range {\n    }\n    &.disabled,\n    &.empty {\n      opacity: 0.2;\n\n      button {\n        cursor: default;\n      }\n    }\n    &.empty {\n      border: none;\n    }\n    &.empty:hover {\n      background-color: #fff;\n    }\n  }\n  .day-button {\n    background: transparent;\n    width: 100%;\n    height: 100%;\n    border: none;\n    cursor: pointer;\n    color: inherit;\n    text-align: center;\n    user-select: none;\n    font-size: 15px;\n    font-weight: inherit;\n    padding: 0;\n  }\n\n  .action-buttons {\n    min-height: 50px;\n    padding-top: 10px;\n    button {\n      display: block;\n      position: relative;\n      background: transparent;\n      border: none;\n      font-weight: normal;\n      font-size: 14px;\n      cursor: pointer;\n\n      &:hover {\n        text-decoration: underline;\n      }\n      &:nth-child(1) {\n        float: left;\n        left: 15px;\n      }\n      &:nth-child(2) {\n        float: right;\n        right: 15px;\n      }\n    }\n  }\n\n  .mobile-only {\n    display: none;\n    @media (max-width: 767px) {\n      display: block;\n    }\n  }\n}\n</style>\n","export default {\n  bind: function(el, binding, vnode) {\n    el.event = function(event) {\n      if (!(el === event.target || el.contains(event.target))) {\n        vnode.context[binding.expression](event)\n      }\n    }\n    document.body.addEventListener('click', el.event)\n    document.body.addEventListener('touchstart', el.event)\n  },\n  unbind: function(el) {\n    document.body.removeEventListener('click', el.event)\n    document.body.removeEventListener('touchstart', el.event)\n  }\n}\n","import './polyfills'\nimport AirbnbStyleDatepicker from './components/AirbnbStyleDatepicker.vue'\nimport ClickOutside from './directives/ClickOutside'\n\nconst AirbnbStyleDatepickerPlugin = {\n  install(Vue, options) {\n    Vue.directive('click-outside', ClickOutside)\n\n    Vue.component(AirbnbStyleDatepicker.name, {\n      ...options,\n      ...AirbnbStyleDatepicker\n    })\n  }\n}\n// User has to install the component by themselves, to allow to pass options\nif (typeof window !== 'undefined' && window.Vue) {\n  window.AirbnbStyleDatepicker = AirbnbStyleDatepickerPlugin\n}\nexport default AirbnbStyleDatepickerPlugin\n"],"names":["Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","this","document","ownerDocument","querySelectorAll","i","length","item","Object","assign","defineProperty","target","varArgs","TypeError","to","index","arguments","nextSource","nextKey","hasOwnProperty","call","Array","findIndex","predicate","o","len","thisArg","k","kValue","copyObject","obj","JSON","parse","stringify","render","_vm","width","isSelected","attrs","data-date","fullDate","on","mouseover","type","String","Date","default","Number","Boolean","text","possible","charAt","Math","floor","random","translation","texts","inline","triggerPosition","triggerWrapperPosition","offsetX","right","viewportWidth","showFullscreen","isMobile","fullscreenMobile","selectedDate1","selectedDate2","showMonths","dateOne","isBefore","dateTwo","newDate","newValue","$emit","oldValue","setStartDates","startingDate","generateMonths","func","wait","immediate","timeout","sundayFirst","setSundayToFirstDayInWeek","_handleWindowResizeEvent","positionDatepicker","context","args","callNow","setTimeout","apply","_handleWindowClickEvent","preventDefault","toggleDatepicker","addEventListener","triggerElement","createElement","startOpen","handleTriggerInput","removeEventListener","event","closeDatepicker","keys","keyCode","shiftKey","showDatepicker","nextMonth","setDateFromText","openDatepicker","value","isFormatYearFirst","match","isFormatDayFirst","substring","valueAsDateObject","formattedDate","format","isDateDisabled","isAfterEndDate","selectDate","months","push","addMonths","$options","colors","selected","selectedText","startDate","hasMinDate","minDate","subtractMonths","lastDayShort","daysShort","pop","unshift","date","year","monthNumber","getWeeks","firstDateOfMonth","weekDayNotInMonth","dayNumber","daysInMonth","getDaysInMonth","firstDayInWeek","weeks","week","let","d","isLastDayInMonth","dayNumberFull","isBeforeMinDate","isSelectingDate1","hoverDate","isAfter","allDatesSelected","getMonth","splice","initialDate1","initialDate2","classList","remove","triggerWrapperElement","element","selector","closest","parentElement","findAncestor","getBoundingClientRect","left","viewPortWidth","max","documentElement","clientWidth","window","innerWidth","isTablet","monthsToShow","el","binding","vnode","contains","expression","body","AirbnbStyleDatepickerPlugin","Vue","options","directive","ClickOutside","component","AirbnbStyleDatepicker","name"],"mappings":"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"}